services:
  etcd:
    image: "bitnami/etcd:latest"
    container_name: etcd
    environment:
      ALLOW_NONE_AUTHENTICATION: yes

  fluentd:
    build: fluentd
    container_name: fluentd
    depends_on:
      - kafka
    network_mode: host

  kafka:
    image: "bitnami/kafka:latest"
    container_name: kafka
    depends_on:
      - kafka-init
    network_mode: host
    environment:
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@127.0.0.1:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

  kafka-init:
    image: "bitnami/kafka:latest"
    container_name: kafka-init
    network_mode: host
    entrypoint: "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --create --topic simulog --partitions 3 --replication-factor 1"

  spark:
    image: "bitnami/spark:latest"
    container_name: spark
    depends_on:
      - kafka
    network_mode: host

  prediction:
    build: spark
    depends_on:
      - spark
    network_mode: host
    environment:
      ES_URI: "127.0.0.1:9200"
      KAFKA_URI: "127.0.0.1:9092"
      KAFKA_TOPIC: simulog

  simuhub:
    build: simuhub
    container_name: simuhub
    depends_on:
      - etcd
    ports:
      - "80:8080"
    environment:
      ETCD_URI: "etcd:2379"
      ETCD_KEY: config

  simulog:
    build: simulog
    # deploy:
    #   replicas: 10
    depends_on:
      - fluentd
      - etcd
    environment:
      ETCD_URI: "etcd:2379"
      ETCD_KEY: config
    logging:
      driver: fluentd
      options:
        fluentd-address: "127.0.0.1:24224"
        fluentd-async: "true"
        tag: "docker.simulog.{{.ID}}"

  elasticsearch:
    image: "elasticsearch:8.17.1"
    network_mode: host
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ELASTIC_PASSWORD=elastic"

  kibana:
    image: "kibana:8.17.1"
    network_mode: host
    # ports:
    #   - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: '["http://localhost:9200"]'
